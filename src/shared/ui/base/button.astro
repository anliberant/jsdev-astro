---
import { cn } from '@/shared/utils';

export interface Props {
  variant?:
    | 'default'
    | 'destructive'
    | 'outline'
    | 'secondary'
    | 'ghost'
    | 'link'
    | 'convert'
    | 'clear'
    | 'copy'
    | 'sample';
  size?: 'default' | 'sm' | 'lg' | 'icon';
  class?: string;
  copied?: boolean;
  [key: string]: any;
}

const {
  variant = 'default',
  size = 'default',
  class: className = '',
  copied = false,
  ...props
} = Astro.props;

function getButtonClasses(
  variant: string,
  size: string,
  className: string,
  copied: boolean
): string {
  const baseClasses = 'button-base';
  const variantClass = copied && variant === 'copy' ? 'button-copied' : `button-${variant}`;
  const sizeClass = `button-${size}`;

  return cn(baseClasses, variantClass, sizeClass, className);
}

const buttonClasses = getButtonClasses(variant, size, className, copied);
---

<button
  class={buttonClasses}
  {...props}>
  <slot />
</button>

<style>
  .button-base {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    white-space: nowrap;
    border-radius: var(--radius);
    font-size: 0.875rem;
    font-weight: 500;
    transition: all 0.2s;
    border: none;
    cursor: pointer;
    text-decoration: none;
    gap: 0.25rem;
  }

  .button-base:focus-visible {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }

  .button-base:disabled {
    pointer-events: none;
    opacity: 0.5;
  }

  .button-default {
    background-color: hsl(var(--primary, #0f172a));
    color: hsl(var(--primary-foreground, #ffffff));
  }

  .button-default:hover {
    background-color: var(--primary-hover, rgba(15, 23, 42, 0.9));
  }

  .button-destructive {
    background-color: var(--destructive, #dc2626);
    color: var(--destructive-foreground, #ffffff);
  }

  .button-destructive:hover {
    background-color: var(--destructive-hover, rgba(220, 38, 38, 0.9));
  }

  .button-outline {
    border: 1px solid var(--border, #e2e8f0);
    background-color: var(--background, #ffffff);
    color: var(--foreground, #0f172a);
  }

  .button-outline:hover {
    background-color: var(--accent, #f1f5f9);
    color: var(--accent-foreground, #0f172a);
  }

  .button-secondary {
    background-color: var(--secondary, #f1f5f9);
    color: var(--secondary-foreground, #0f172a);
  }

  .button-secondary:hover {
    background-color: var(--secondary-hover, rgba(241, 245, 249, 0.5));
  }

  .button-ghost {
    background-color: transparent;
    color: var(--foreground, #0f172a);
  }

  .button-ghost:hover {
    background-color: var(--accent, #f1f5f9);
    color: var(--accent-foreground, #0f172a);
  }

  .button-link {
    background-color: transparent;
    color: var(--primary, #0f172a);
    text-underline-offset: 4px;
  }

  .button-link:hover {
    text-decoration: underline;
  }

  .button-convert {
    background: #3b82f6;
    color: white;
  }

  .button-convert:hover {
    background: #2563eb;
  }

  .button-clear {
    background: #f1f5f9;
    color: #1e293b;
  }

  .button-clear:hover {
    background: #e2e8f0;
  }

  .button-copy {
    background: #10b981;
    color: white;
  }

  .button-copy:hover {
    background: #059669;
  }

  .button-copied {
    background: #6366f1;
    color: white;
  }

  .button-sample {
    background: #8b5cf6;
    color: white;
  }

  .button-sample:hover {
    background: #7c3aed;
  }

  .button-default {
    height: 2.5rem;
    padding: 0.5rem 1rem;
  }

  .button-sm {
    height: 2.25rem;
    padding: 0 0.75rem;
    font-size: 0.75rem;
  }

  .button-lg {
    height: 2.75rem;
    padding: 0 2rem;
  }

  .button-icon {
    height: 2.5rem;
    width: 2.5rem;
    padding: 0;
  }
</style>
