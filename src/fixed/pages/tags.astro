---
import BaseLayout from '@/app/layouts/base-layout.astro';
import { getTagsWithCount } from '@/shared/hooks/get-unique-tags';

const sortedTags = await getTagsWithCount('posts');
---

<BaseLayout
  title='All Tags | JavaScript Development Space'
  description='Browse all tags and topics covered in our JavaScript development blog. Find articles by specific technologies, frameworks, and concepts.'>
  <main class='main'>
    <header class='heading-header'>
      <h1 class='heading-title'>
        Explore by
        <span class='heading-highlight'>Tags</span>
      </h1>
      <p class='heading-description'>
        Browse articles by topic. Each tag represents a specific technology, concept, or framework
        covered in our tutorials and guides.
      </p>
    </header>

    <section class='tags-grid'>
      {
        sortedTags.map(tag => (
          <a
            href={`/tag/${tag.slug}/`}
            class='tag-card'>
            <div class='tag-content'>
              <span class='tag-hash'>#</span>
              <h2 class='tag-name'>{tag.name}</h2>
              <span class='tag-count'>
                {tag.count} {tag.count === 1 ? 'article' : 'articles'}
              </span>
            </div>
          </a>
        ))
      }
    </section>

    {
      sortedTags.length === 0 && (
        <div class='no-tags'>
          <p>No tags found yet. Check back soon for more content!</p>
        </div>
      )
    }
  </main>
</BaseLayout>

<style>
  .tags-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
  }

  .tag-card {
    display: block;
    padding: 1.5rem;
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    background-color: hsl(var(--card));
    text-decoration: none;
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
  }

  .tag-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6);
    transform: scaleX(0);
    transition: transform 0.2s ease;
  }

  .tag-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  }

  .tag-card:hover::before {
    transform: scaleX(1);
  }

  .tag-content {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .tag-hash {
    font-size: 1.5rem;
    font-weight: 700;
    color: #3b82f6;
    line-height: 1;
  }

  .tag-name {
    font-size: 1.125rem;
    font-weight: 600;
    margin: 0;
    flex: 1;
    color: hsl(var(--foreground));
  }

  .tag-count {
    font-size: 0.875rem;
    color: hsl(var(--muted-foreground));
    background: hsl(var(--muted));
    padding: 0.25rem 0.75rem;
    border-radius: 999px;
    font-weight: 500;
  }

  .no-tags {
    text-align: center;
    padding: 3rem 0;
    color: hsl(var(--muted-foreground));
  }

  @media (max-width: 768px) {
    .tags-page {
      padding: 1.5rem 1rem;
    }

    .heading-title {
      font-size: 2rem;
    }

    .tags-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .tag-card {
      padding: 1.25rem;
    }
  }

  :global(.dark) .tag-card:hover {
    box-shadow: 0 8px 16px rgba(255, 255, 255, 0.1);
  }
</style>
