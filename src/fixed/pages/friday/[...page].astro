---
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';

import { siteConfig } from '@/app/config/site';
import BaseLayout from '@/app/layouts/base-layout.astro';
import Howtos from '@/entities/howto/howtos.astro';
import HeadingBlock from '@/shared/ui/layout/heading-block.astro';
import Pagination from '@/shared/ui/layout/pagination.astro';

const allFridays = await getCollection('fridays', ({ data }) => !data.isDraft);
const sortedFridays = allFridays.sort((a, b) => {
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});

const numberOfPages = Math.ceil(sortedFridays.length / siteConfig.postsPerPage);

export const getStaticPaths = (async ({ paginate }) => {
  const allFridays = await getCollection('fridays', ({ data }) => !data.isDraft);
  return paginate(
    allFridays.sort((a, b) => {
      return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
    }),
    {
      pageSize: siteConfig.postsPerPage,
    }
  );
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const title =
  page.currentPage === 1 ?
    siteConfig.fridaysPageTitle
  : siteConfig.fridaysPageTitle + ' ' + 'Page ' + page.currentPage;
---

<BaseLayout
  title={title}
  description={siteConfig.fridaysPageDescription}>
  <main class='main'>
    {
      page.currentPage === 1 ?
        <HeadingBlock
          title={siteConfig.fridaysHeadTitle}
          headingTwo={siteConfig.fridaysHeadingTwo}
          description={siteConfig.fridaysHeadDescription}
          class='mt-10'
        />
      : <h1 class='page-heading mt-10'>Friday Links Roundup Page {page.currentPage}</h1>
    }
    <Howtos howtos={page.data} />
    {
      numberOfPages > 1 && (
        <Pagination
          currentPage={page.currentPage}
          numPages={numberOfPages}
          slug='friday'
        />
      )
    }
  </main>
</BaseLayout>
