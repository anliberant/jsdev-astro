---
import { generateToolsBreadcrumbs } from '@/shared/helpers/breadcrumbs.helpers';
import Breadcrumbs from '@/shared/ui/base/breadcrumbs.astro';
import ConverterHeader from '@/shared/ui/converters/converter-header.astro';
import ConverterPanel from '@/shared/ui/converters/converter-panel.astro';
import HeadingBlock from '@/shared/ui/layout/heading-block.astro';

const breadcrumbItems = generateToolsBreadcrumbs('HTML to JSX Converter');

const converterOptions = [
  { id: 'prettifyOption', label: 'Prettify', checked: true },
  { id: 'camelCaseOption', label: 'camelCase Props', checked: true },
  { id: 'fragmentOption', label: 'Use Fragment', checked: false },
];
---

<Breadcrumbs
  items={breadcrumbItems}
  class='mt-10'
/>

<HeadingBlock
  title='HTML to JSX Converter'
  description='Easily convert HTML to JSX with this HTML to JSX converter'
  class='mt-0'
/>

<ConverterHeader
  options={converterOptions}
  class='mt-10'
/>

<div class='main-content'>
  <ConverterPanel
    type='input'
    title='HTML Input'
    icon='📝'
    textareaId='htmlInput'
    placeholder='Paste your HTML code here...'
    showSampleButton={true}
    showStats={true}
  />

  <ConverterPanel
    type='output'
    title='JSX Output'
    icon='⚛️'
    textareaId='jsxOutput'
    placeholder='Converted JSX code will appear here...'
    readonly={true}
    showStats={true}
  />
</div>

<script>
  import { HtmlToJsxConverterController } from './lib/converter-controller';

  let controller = null;
  let initAttempts = 0;
  const maxAttempts = 50;
  const retryDelay = 100;

  function checkRequiredElements() {
    const required = ['htmlInput', 'jsxOutput', 'convertBtn', 'clearBtn', 'copyBtn'];
    const missing = [];

    for (const id of required) {
      const element = document.getElementById(id);
      if (!element) {
        missing.push(id);
      }
    }

    if (missing.length > 0) {
      console.warn(`Missing elements: ${missing.join(', ')}`);
      return false;
    }

    return true;
  }

  function initializeConverter() {
    initAttempts++;
    console.log(`JSX Script Attempt ${initAttempts}: Checking elements...`);

    if (!checkRequiredElements()) {
      if (initAttempts < maxAttempts) {
        console.log(`Retrying in ${retryDelay}ms...`);
        setTimeout(initializeConverter, retryDelay);
        return;
      } else {
        console.error('Failed to find all required elements after maximum attempts');
        return;
      }
    }

    try {
      console.log('All required elements found, creating controller...');
      controller = new HtmlToJsxConverterController();

      // Store controller globally for debugging
      if (typeof window !== 'undefined') {
        window.jsxController = controller;
      }

      console.log('JSX converter initialized successfully');
    } catch (error) {
      console.error('Error initializing JSX converter:', error);

      if (initAttempts < maxAttempts) {
        console.log('Retrying initialization...');
        setTimeout(initializeConverter, retryDelay * 2);
      }
    }
  }

  function startInitialization() {
    console.log(`Document readyState: ${document.readyState}`);

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initializeConverter);
    } else {
      // Document is already loaded, start immediately but with a small delay
      setTimeout(initializeConverter, 50);
    }
  }

  // Start the initialization process
  startInitialization();

  // Fallback initialization on window load
  if (typeof window !== 'undefined') {
    window.addEventListener('load', () => {
      setTimeout(() => {
        if (!controller || !controller.isReady()) {
          console.log('Performing final initialization attempt...');
          initializeConverter();
        }
      }, 500);
    });
  }
</script>
