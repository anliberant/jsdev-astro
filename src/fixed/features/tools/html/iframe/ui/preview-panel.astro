<div class='preview-panel'>
  <div class='panel-header'>
    <h2>Live Preview</h2>
    <div class='header-actions'>
      <span
        class='preview-status'
        id='preview-status'
        >Ready</span
      >
    </div>
  </div>

  <div class='panel-content'>
    <!-- Messages -->
    <div
      id='error-message'
      class='message error-message hidden'
    ></div>
    <div
      id='success-message'
      class='message success-message hidden'
    ></div>

    <!-- Preview Container -->
    <div class='preview-container'>
      <div class='preview-wrapper'>
        <div
          id='iframe-preview'
          class='iframe-preview'>
          <div class='placeholder'>
            <div class='placeholder-icon'>üñºÔ∏è</div>
            <p>Enter a source URL to see the iframe preview</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Preview Info -->
    <div class='preview-info'>
      <div class='info-grid'>
        <div class='info-item'>
          <span class='info-label'>Status:</span>
          <span
            class='info-value'
            id='iframe-status'
            >No URL</span
          >
        </div>
        <div class='info-item'>
          <span class='info-label'>Dimensions:</span>
          <span
            class='info-value'
            id='iframe-dimensions'
            >-</span
          >
        </div>
        <div class='info-item'>
          <span class='info-label'>Security:</span>
          <span
            class='info-value'
            id='iframe-security'
            >None</span
          >
        </div>
      </div>
    </div>

    <!-- Device Preview Toggle -->
    <div class='device-preview'>
      <div class='device-controls'>
        <button
          class='device-btn active'
          data-device='desktop'>
          <svg
            width='16'
            height='16'
            viewBox='0 0 24 24'
            fill='none'
            stroke='currentColor'
            stroke-width='2'>
            <rect
              x='2'
              y='3'
              width='20'
              height='14'
              rx='2'
              ry='2'
            ></rect>
            <line
              x1='8'
              y1='21'
              x2='16'
              y2='21'
            ></line>
            <line
              x1='12'
              y1='17'
              x2='12'
              y2='21'
            ></line>
          </svg>
          Desktop
        </button>
        <button
          class='device-btn'
          data-device='tablet'>
          <svg
            width='16'
            height='16'
            viewBox='0 0 24 24'
            fill='none'
            stroke='currentColor'
            stroke-width='2'>
            <rect
              x='4'
              y='2'
              width='16'
              height='20'
              rx='2'
              ry='2'
            ></rect>
          </svg>
          Tablet
        </button>
        <button
          class='device-btn'
          data-device='mobile'>
          <svg
            width='16'
            height='16'
            viewBox='0 0 24 24'
            fill='none'
            stroke='currentColor'
            stroke-width='2'>
            <rect
              x='5'
              y='2'
              width='14'
              height='20'
              rx='2'
              ry='2'
            ></rect>
            <line
              x1='12'
              y1='18'
              x2='12.01'
              y2='18'
            ></line>
          </svg>
          Mobile
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Device preview toggle
    const deviceButtons = document.querySelectorAll('.device-btn');
    const previewWrapper = document.querySelector('.preview-wrapper');

    deviceButtons.forEach(button => {
      button.addEventListener('click', () => {
        deviceButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');

        const device = button.dataset.device;
        previewWrapper.className = `preview-wrapper ${device}`;
      });
    });

    // Monitor iframe changes
    const observer = new MutationObserver(() => {
      updatePreviewInfo();
    });

    const previewElement = document.getElementById('iframe-preview');
    if (previewElement) {
      observer.observe(previewElement, {
        childList: true,
        subtree: true,
      });
    }

    function updatePreviewInfo() {
      const iframe = previewElement?.querySelector('iframe');
      const statusElement = document.getElementById('iframe-status');
      const dimensionsElement = document.getElementById('iframe-dimensions');
      const securityElement = document.getElementById('iframe-security');

      if (iframe && statusElement && dimensionsElement && securityElement) {
        const src = iframe.getAttribute('src');
        const width = iframe.getAttribute('width') || iframe.style.width || '100%';
        const height = iframe.getAttribute('height') || iframe.style.height || 'auto';
        const sandbox = iframe.getAttribute('sandbox');

        statusElement.textContent = src ? 'Ready' : 'No URL';
        statusElement.className = `info-value ${src ? 'status-ready' : 'status-empty'}`;

        dimensionsElement.textContent = `${width} √ó ${height}`;

        if (sandbox) {
          const permissions = sandbox.split(' ').filter(p => p.trim());
          securityElement.textContent =
            permissions.length > 0 ?
              `Sandboxed (${permissions.length} permissions)`
            : 'Sandboxed (restricted)';
          securityElement.className = 'info-value status-secure';
        } else {
          securityElement.textContent = 'No sandbox';
          securityElement.className = 'info-value status-warning';
        }
      }
    }

    // Initial info update
    updatePreviewInfo();
  });
</script>

<style>
  .preview-panel {
    background: hsl(var(--background));
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    overflow: hidden;
    display: flex;
    flex-direction: column;
    min-height: 400px;
  }

  .panel-header {
    padding: 1rem 1.5rem;
    border-bottom: 1px solid hsl(var(--border));
    background: hsl(var(--muted));
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .panel-header h2 {
    margin: 0;
    font-size: 1.125rem;
    font-weight: 600;
    color: hsl(var(--foreground));
  }

  .header-actions {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .preview-status {
    font-size: 0.8125rem;
    color: hsl(var(--muted-foreground));
    font-weight: 500;
  }

  .panel-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    padding: 1.5rem;
    gap: 1.5rem;
  }

  .message {
    padding: 0.75rem 1rem;
    border-radius: var(--radius);
    font-size: 0.875rem;
    margin: 0;
  }

  .error-message {
    background: hsl(var(--destructive) / 0.1);
    border: 1px solid hsl(var(--destructive) / 0.3);
    color: hsl(var(--destructive));
  }

  .success-message {
    background: hsl(142 76% 36% / 0.1);
    border: 1px solid hsl(142 76% 36% / 0.3);
    color: hsl(142 76% 36%);
  }

  .hidden {
    display: none !important;
  }

  .preview-container {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 300px;
    background:
      radial-gradient(circle at 20% 50%, rgba(120, 119, 198, 0.1), transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.1), transparent 50%),
      linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    padding: 2rem;
    position: relative;
  }

  .preview-wrapper {
    width: 100%;
    max-width: 100%;
    transition: all 0.3s ease;
    display: flex;
    justify-content: center;
  }

  .preview-wrapper.desktop {
    max-width: 100%;
  }

  .preview-wrapper.tablet {
    max-width: 768px;
  }

  .preview-wrapper.mobile {
    max-width: 375px;
  }

  .iframe-preview {
    width: 100%;
    background: white;
    border-radius: var(--radius);
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    min-height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .iframe-preview iframe {
    width: 100%;
    height: 100%;
    border: none;
    display: block;
  }

  .placeholder {
    text-align: center;
    color: hsl(var(--muted-foreground));
    padding: 2rem;
  }

  .placeholder-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.5;
  }

  .placeholder p {
    margin: 0;
    font-size: 0.875rem;
  }

  .preview-info {
    background: hsl(var(--muted) / 0.5);
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    padding: 1rem;
  }

  .info-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 0.75rem;
  }

  .info-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .info-label {
    font-size: 0.75rem;
    color: hsl(var(--muted-foreground));
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .info-value {
    font-size: 0.8125rem;
    color: hsl(var(--foreground));
    font-weight: 500;
  }

  .info-value.status-ready {
    color: hsl(142 76% 36%);
  }

  .info-value.status-empty {
    color: hsl(var(--muted-foreground));
  }

  .info-value.status-secure {
    color: hsl(142 76% 36%);
  }

  .info-value.status-warning {
    color: hsl(45 93% 47%);
  }

  .device-preview {
    border-top: 1px solid hsl(var(--border));
    padding-top: 1rem;
  }

  .device-controls {
    display: flex;
    gap: 0.5rem;
    justify-content: center;
  }

  .device-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    background: hsl(var(--background));
    color: hsl(var(--muted-foreground));
    font-size: 0.8125rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .device-btn:hover {
    background: hsl(var(--muted));
    color: hsl(var(--foreground));
  }

  .device-btn.active {
    background: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    border-color: hsl(var(--primary));
  }

  .device-btn svg {
    flex-shrink: 0;
  }

  @media (max-width: 768px) {
    .panel-content {
      padding: 1rem;
      gap: 1rem;
    }

    .preview-container {
      padding: 1rem;
      min-height: 250px;
    }

    .info-grid {
      grid-template-columns: 1fr;
    }

    .device-controls {
      flex-wrap: wrap;
    }

    .device-btn {
      flex: 1;
      justify-content: center;
      min-width: 0;
    }
  }

  :global(.dark) .preview-container {
    background:
      radial-gradient(circle at 20% 50%, rgba(120, 119, 198, 0.1), transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.1), transparent 50%),
      linear-gradient(135deg, #1e293b 0%, #0f172a 100%);
  }
</style>
