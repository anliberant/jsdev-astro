---
type Props = {
  items: Array<{ slug: string; text: string; depth?: number }>;
};

const { items = [] } = Astro.props;
---

<nav
  class='toc-container'
  aria-label='Table of contents'>
  <h2>Table of Contents</h2>
  <ol>
    {
      items.map(item => (
        <li
          key={item.slug}
          class={`depth-${item.depth || 1}`}>
          <a
            href={`#${item.slug}`}
            data-id={item.slug}>
            {item.text}
          </a>
        </li>
      ))
    }
  </ol>
</nav>
<script>
  const observer = new IntersectionObserver(
    entries => {
      for (const entry of entries) {
        const id = entry.target.id;
        const link = document.querySelector(`.toc-container a[data-id="${id}"]`);
        if (link) {
          link.classList.toggle('active', entry.isIntersecting && entry.intersectionRatio > 0.4);
        }
      }
    },
    {
      rootMargin: '-30% 0% -60% 0%',
      threshold: [0.4],
    }
  );

  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('h1[id], h2[id], h3[id], h4[id]').forEach(el => {
      observer.observe(el);
    });
  });
</script>
<style>
  .toc-container {
    --bg-light: #f9f9f9;
    --bg-dark: #1a1a1a;
    --text-light: #333;
    --text-dark: #eee;
    --accent: #0077ff;
    --border: #ccc;
    --border-dark: #444;

    max-height: 300px;
    max-width: 800px;
    overflow-y: auto;
    padding: 1rem;
    border: 1px solid var(--border);
    border-radius: 8px;
    background-color: var(--bg-light);
    color: var(--text-light);
    font-size: 0.9rem;
    line-height: 1.4;
    margin: 1rem 0;
  }

  .toc-container h2 {
    margin: 0 0 0.75rem 0;
    padding: 0;
    padding-left: 1rem;
    font-size: 1.3rem;
  }
  :global(.dark) .toc-container {
    background-color: var(--bg-dark);
    color: var(--text-dark);
    border-color: var(--border-dark);
  }

  .toc-container ol {
    margin: 0;
    padding-left: 0;
    list-style: none;
  }

  .toc-container li {
    margin: 0.3rem 0;
  }

  .toc-container a {
    color: inherit;
    text-decoration: none;
    display: block;
    border-left: 2px solid transparent;
    padding: 0.2rem 0.5rem;
    transition:
      border-color 0.2s,
      color 0.2s;
  }

  .toc-container a:hover,
  .toc-container a:focus {
    color: var(--accent);
    border-left-color: var(--accent);
  }

  .toc-container a.active {
    border-left-color: var(--accent);
    font-weight: bold;
    color: var(--accent);
  }

  .depth-1 {
    padding-left: 0rem;
  }

  .depth-2 {
    padding-left: 1rem;
    font-size: 0.85rem;
    opacity: 0.85;
  }

  .depth-3 {
    padding-left: 2rem;
    font-size: 0.8rem;
    opacity: 0.7;
  }

  .depth-4 {
    padding-left: 3rem;
    font-size: 0.75rem;
    opacity: 0.6;
  }
</style>
