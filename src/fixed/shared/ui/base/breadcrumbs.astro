---
export interface BreadcrumbItem {
  label: string;
  href?: string;
  isActive?: boolean;
}

export interface Props {
  items: BreadcrumbItem[];
  separator?: string;
  class?: string;
  showHome?: boolean;
  homeLabel?: string;
}

const {
  items,
  separator = 'â€º',
  class: className = '',
  showHome = true,
  homeLabel = 'Home',
} = Astro.props;

const breadcrumbItems = showHome ? [{ label: homeLabel, href: '/' }, ...items] : items;

const finalItems = breadcrumbItems.map((item, index) => ({
  ...item,
  isActive: index === breadcrumbItems.length - 1,
}));
---

<nav
  class={`breadcrumbs ${className}`}
  aria-label='Breadcrumb'>
  <ol class='breadcrumb-list'>
    {
      finalItems.map((item, index) => (
        <li class='breadcrumb-item'>
          {item.href && !item.isActive ?
            <a
              href={item.href}
              class='breadcrumb-link'>
              {item.label}
            </a>
          : <span
              class='breadcrumb-current'
              aria-current={item.isActive ? 'page' : undefined}>
              {item.label}
            </span>
          }
          {index < finalItems.length - 1 && (
            <span
              class='breadcrumb-separator'
              aria-hidden='true'>
              {separator}
            </span>
          )}
        </li>
      ))
    }
  </ol>
</nav>

<style>
  .breadcrumbs {
    margin-bottom: 1rem;
  }

  .breadcrumb-list {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    list-style: none;
    margin: 0;
    padding: 0;
    font-size: 0.875rem;
    color: hsl(var(--foreground));
    gap: 0.25rem;
  }

  .breadcrumb-item {
    display: flex;
    align-items: center;
  }

  .breadcrumb-link {
    color: hsl(var(--foreground));
    text-decoration: none;
    transition: color 0.2s ease;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    margin: -0.25rem -0.5rem;
  }

  .breadcrumb-link:hover {
    color: hsl(var(--muted-foreground));
    text-decoration: underline;
    background: hsl(var(--muted) / 0.5);
  }

  .breadcrumb-link:focus-visible {
    outline: 2px solid hsl(var(--primary));
    outline-offset: 2px;
  }

  .breadcrumb-current {
    color: hsl(var(--foreground));
    font-weight: 500;
  }

  .breadcrumb-separator {
    margin: 0 0.5rem;
    color: hsl(var(--muted-foreground));
    font-weight: 300;
    user-select: none;
  }

  @media (max-width: 640px) {
    .breadcrumb-list {
      font-size: 0.8125rem;
    }

    .breadcrumb-separator {
      margin: 0 0.375rem;
    }
  }

  .breadcrumbs.compact {
    margin-bottom: 0.5rem;
  }

  .breadcrumbs.compact .breadcrumb-list {
    font-size: 0.8125rem;
  }

  .breadcrumbs.large .breadcrumb-list {
    font-size: 1rem;
  }

  :global(.dark) .breadcrumb-link:hover {
    background: hsl(var(--muted) / 0.3);
  }
</style>
