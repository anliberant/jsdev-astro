---
import Button from '@/shared/ui/base/button.astro';
---

<div class='controls-panel'>
  <div class='controls-content'>
    <h2>Button Configuration</h2>

    <!-- Presets Section -->
    <div class='control-section'>
      <h3>Quick Presets</h3>
      <div class='preset-grid'>
        <button
          class='preset-btn primary'
          id='preset-primary'>
          <span
            class='preset-color'
            style='background: #3B82F6'
          ></span>
          Primary
        </button>
        <button
          class='preset-btn secondary'
          id='preset-secondary'>
          <span
            class='preset-color'
            style='background: #6B7280'
          ></span>
          Secondary
        </button>
        <button
          class='preset-btn danger'
          id='preset-danger'>
          <span
            class='preset-color'
            style='background: #EF4444'
          ></span>
          Danger
        </button>
        <button
          class='preset-btn success'
          id='preset-success'>
          <span
            class='preset-color'
            style='background: #10B981'
          ></span>
          Success
        </button>
        <button
          class='preset-btn warning'
          id='preset-warning'>
          <span
            class='preset-color'
            style='background: #F59E0B'
          ></span>
          Warning
        </button>
        <button
          class='preset-btn retro'
          id='preset-retro'>
          <span
            class='preset-color'
            style='background: linear-gradient(45deg, #FF00FF, #00FFFF)'
          ></span>
          Retro
        </button>
      </div>
    </div>

    <!-- Text Configuration -->
    <div class='control-section'>
      <h3>Text</h3>

      <div class='control-group'>
        <label for='button-text'>Button Text</label>
        <input
          type='text'
          id='button-text'
          value='Click Me'
          placeholder='Enter button text'
        />
      </div>

      <div class='control-group'>
        <label for='font-size'>Font Size</label>
        <div class='range-group'>
          <input
            type='range'
            id='font-size'
            min='12'
            max='32'
            value='16'
          />
          <span
            id='font-size-value'
            class='range-value'
            >16px</span
          >
        </div>
      </div>

      <div class='control-group'>
        <label for='font-weight'>Font Weight</label>
        <select id='font-weight'>
          <option value='400'>Normal (400)</option>
          <option value='500'>Medium (500)</option>
          <option value='600'>Semi Bold (600)</option>
          <option
            value='700'
            selected
            >Bold (700)</option
          >
          <option value='800'>Extra Bold (800)</option>
          <option value='900'>Black (900)</option>
        </select>
      </div>

      <div class='control-group'>
        <label for='font-family'>Font Family</label>
        <input
          type='text'
          id='font-family'
          value='Arial, sans-serif'
          placeholder='Font family'
        />
      </div>

      <div class='control-group'>
        <label for='text-transform'>Text Transform</label>
        <select id='text-transform'>
          <option value='none'>None</option>
          <option
            value='uppercase'
            selected
            >Uppercase</option
          >
          <option value='lowercase'>Lowercase</option>
          <option value='capitalize'>Capitalize</option>
        </select>
      </div>

      <div class='control-group'>
        <label for='letter-spacing'>Letter Spacing</label>
        <div class='range-group'>
          <input
            type='range'
            id='letter-spacing'
            min='0'
            max='5'
            step='0.5'
            value='1'
          />
          <span
            id='letter-spacing-value'
            class='range-value'
            >1px</span
          >
        </div>
      </div>
    </div>

    <!-- Colors Configuration -->
    <div class='control-section'>
      <h3>Colors</h3>

      <div class='color-grid'>
        <div class='color-group'>
          <label for='background-color'>Background</label>
          <div class='color-input-group'>
            <input
              type='color'
              id='background-color'
              value='#FFEB3B'
            />
            <input
              type='text'
              value='#FFEB3B'
              readonly
            />
          </div>
        </div>

        <div class='color-group'>
          <label for='text-color'>Text</label>
          <div class='color-input-group'>
            <input
              type='color'
              id='text-color'
              value='#000000'
            />
            <input
              type='text'
              value='#000000'
              readonly
            />
          </div>
        </div>

        <div class='color-group'>
          <label for='border-color'>Border</label>
          <div class='color-input-group'>
            <input
              type='color'
              id='border-color'
              value='#000000'
            />
            <input
              type='text'
              value='#000000'
              readonly
            />
          </div>
        </div>

        <div class='color-group'>
          <label for='shadow-color'>Shadow</label>
          <div class='color-input-group'>
            <input
              type='color'
              id='shadow-color'
              value='#000000'
            />
            <input
              type='text'
              value='#000000'
              readonly
            />
          </div>
        </div>
      </div>
    </div>

    <!-- Size Configuration -->
    <div class='control-section'>
      <h3>Size & Spacing</h3>

      <div class='control-group'>
        <label for='padding-x'>Horizontal Padding</label>
        <div class='range-group'>
          <input
            type='range'
            id='padding-x'
            min='8'
            max='48'
            value='24'
          />
          <span
            id='padding-x-value'
            class='range-value'
            >24px</span
          >
        </div>
      </div>

      <div class='control-group'>
        <label for='padding-y'>Vertical Padding</label>
        <div class='range-group'>
          <input
            type='range'
            id='padding-y'
            min='4'
            max='24'
            value='12'
          />
          <span
            id='padding-y-value'
            class='range-value'
            >12px</span
          >
        </div>
      </div>

      <div class='control-group'>
        <label for='border-width'>Border Width</label>
        <div class='range-group'>
          <input
            type='range'
            id='border-width'
            min='1'
            max='8'
            value='3'
          />
          <span
            id='border-width-value'
            class='range-value'
            >3px</span
          >
        </div>
      </div>

      <div class='control-group'>
        <label for='border-radius'>Border Radius</label>
        <div class='range-group'>
          <input
            type='range'
            id='border-radius'
            min='0'
            max='24'
            value='8'
          />
          <span
            id='border-radius-value'
            class='range-value'
            >8px</span
          >
        </div>
      </div>
    </div>

    <!-- Shadow Configuration -->
    <div class='control-section'>
      <h3>Shadow</h3>

      <div class='control-group'>
        <label for='shadow-offset-x'>Horizontal Offset</label>
        <div class='range-group'>
          <input
            type='range'
            id='shadow-offset-x'
            min='0'
            max='12'
            value='4'
          />
          <span
            id='shadow-offset-x-value'
            class='range-value'
            >4px</span
          >
        </div>
      </div>

      <div class='control-group'>
        <label for='shadow-offset-y'>Vertical Offset</label>
        <div class='range-group'>
          <input
            type='range'
            id='shadow-offset-y'
            min='0'
            max='12'
            value='4'
          />
          <span
            id='shadow-offset-y-value'
            class='range-value'
            >4px</span
          >
        </div>
      </div>
    </div>

    <!-- Animation Configuration -->
    <div class='control-section'>
      <h3>Animation</h3>

      <div class='control-group'>
        <label for='hover-effect'>Hover Effect</label>
        <select id='hover-effect'>
          <option value='none'>None</option>
          <option
            value='lift'
            selected
            >Lift</option
          >
          <option value='push'>Push</option>
          <option value='glow'>Glow</option>
          <option value='shake'>Shake</option>
        </select>
      </div>

      <div class='control-group'>
        <label for='animation-duration'>Animation Duration</label>
        <div class='range-group'>
          <input
            type='range'
            id='animation-duration'
            min='100'
            max='500'
            step='50'
            value='200'
          />
          <span
            id='animation-duration-value'
            class='range-value'
            >200ms</span
          >
        </div>
      </div>
    </div>

    <!-- Reset Button -->
    <div class='control-section'>
      <button
        class='reset-btn'
        id='reset-button'>
        <svg
          width='16'
          height='16'
          viewBox='0 0 24 24'
          fill='none'
          stroke='currentColor'
          stroke-width='2'>
          <path d='M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8'></path>
          <path d='M3 3v5h5'></path>
        </svg>
        Reset to Default
      </button>
    </div>
  </div>
</div>

<style>
  .controls-panel {
    background: hsl(var(--muted));
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    height: fit-content;
    position: sticky;
    top: 2rem;
    max-height: calc(100vh - 4rem);
    overflow: visible;
    width: 100%;
    min-width: 320px;
    display: block;
    box-sizing: border-box;
  }

  .controls-content {
    padding: 1.5rem;
    overflow-y: auto;
    max-height: calc(100vh - 4rem);
  }

  .controls-panel h2 {
    margin: 0 0 1.5rem 0;
    font-size: 1.25rem;
    font-weight: 600;
    color: hsl(var(--foreground));
  }

  .control-section {
    margin-bottom: 2rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid hsl(var(--border));
  }

  .control-section:last-child {
    border-bottom: none;
    margin-bottom: 0;
  }

  .control-section h3 {
    margin: 0 0 1rem 0;
    font-size: 0.875rem;
    font-weight: 600;
    color: hsl(var(--foreground));
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .preset-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.75rem;
  }

  .preset-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem;
    border: 2px solid hsl(var(--border));
    border-radius: var(--radius);
    background: hsl(var(--background));
    color: hsl(var(--foreground));
    font-size: 0.75rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    text-align: left;
    position: relative;
    overflow: hidden;
  }

  .preset-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-color: hsl(var(--primary));
  }

  .preset-btn:active {
    transform: translateY(0);
  }

  .preset-color {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 1px solid rgba(0, 0, 0, 0.1);
    flex-shrink: 0;
  }

  .preset-btn.primary:hover {
    background: linear-gradient(135deg, #3b82f6, #1e40af);
    color: white;
    border-color: #1e40af;
  }

  .preset-btn.secondary:hover {
    background: linear-gradient(135deg, #6b7280, #374151);
    color: white;
    border-color: #374151;
  }

  .preset-btn.danger:hover {
    background: linear-gradient(135deg, #ef4444, #dc2626);
    color: white;
    border-color: #dc2626;
  }

  .preset-btn.success:hover {
    background: linear-gradient(135deg, #10b981, #059669);
    color: white;
    border-color: #059669;
  }

  .preset-btn.warning:hover {
    background: linear-gradient(135deg, #f59e0b, #d97706);
    color: white;
    border-color: #d97706;
  }

  .preset-btn.retro:hover {
    background: linear-gradient(45deg, #ff00ff, #00ffff);
    color: black;
    border-color: #00ffff;
    animation: retro-glow 1s ease-in-out infinite alternate;
  }

  @keyframes retro-glow {
    from {
      box-shadow: 0 0 10px #ff00ff;
    }
    to {
      box-shadow:
        0 0 20px #00ffff,
        0 0 30px #ff00ff;
    }
  }

  .control-group {
    margin-bottom: 1rem;
  }

  .control-group:last-child {
    margin-bottom: 0;
  }

  .control-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    font-weight: 500;
    color: hsl(var(--foreground));
  }

  .control-group input[type='text'],
  .control-group select {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    background: hsl(var(--background));
    color: hsl(var(--foreground));
    font-size: 0.875rem;
  }

  .control-group input[type='text']:focus,
  .control-group select:focus {
    outline: none;
    border-color: hsl(var(--primary));
    box-shadow: 0 0 0 2px hsl(var(--primary) / 0.2);
  }

  .range-group {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }
  .range-group input[type='range'] {
    flex: 1;
    height: 6px;
    background: hsl(var(--border));
    border-radius: 3px;
    outline: none;
    -webkit-appearance: none;
    border: 1px solid hsl(var(--border));
    position: relative;
  }

  .range-group input[type='range']::-webkit-slider-track {
    height: 6px;
    background: hsl(var(--muted));
    border-radius: 3px;
    border: 1px solid hsl(var(--border));
  }

  .range-group input[type='range']::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 18px;
    height: 18px;
    background: hsl(var(--primary));
    border-radius: 50%;
    cursor: pointer;
    border: 2px solid white;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    margin-top: -7px;
  }

  .range-group input[type='range']::-moz-range-track {
    height: 6px;
    background: hsl(var(--muted));
    border-radius: 3px;
    border: 1px solid hsl(var(--border));
  }

  .range-group input[type='range']::-moz-range-thumb {
    width: 18px;
    height: 18px;
    background: hsl(var(--primary));
    border-radius: 50%;
    cursor: pointer;
    border: 2px solid white;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  }
  .range-value {
    font-size: 0.75rem;
    font-weight: 500;
    color: hsl(var(--muted-foreground));
    min-width: 3rem;
    text-align: right;
  }

  .color-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .color-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .color-group label {
    font-size: 0.75rem;
    margin-bottom: 0;
  }

  .color-input-group {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .color-input-group input[type='color'] {
    width: 40px;
    height: 32px;
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    cursor: pointer;
    background: none;
    padding: 0;
  }

  .color-input-group input[type='text'] {
    flex: 1;
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    height: 32px;
  }

  .reset-btn {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    border: 2px solid hsl(var(--border));
    border-radius: var(--radius);
    background: hsl(var(--background));
    color: hsl(var(--muted-foreground));
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .reset-btn:hover {
    background: hsl(var(--destructive));
    color: hsl(var(--destructive-foreground));
    border-color: hsl(var(--destructive));
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(239, 68, 68, 0.2);
  }

  .reset-btn:active {
    transform: translateY(0);
  }

  @media (max-width: 1024px) {
    .controls-panel {
      position: relative;
      top: 0;
      max-height: none;
    }

    .controls-content {
      max-height: none;
    }

    .color-grid {
      grid-template-columns: 1fr;
    }

    .preset-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media (max-width: 768px) {
    .controls-panel {
      padding: 0;
    }

    .controls-content {
      padding: 1rem;
    }

    .preset-grid {
      grid-template-columns: 1fr 1fr;
    }
  }
</style>

<script>
  // Update color text inputs when color pickers change
  document.addEventListener('DOMContentLoaded', () => {
    const colorInputs = document.querySelectorAll('input[type="color"]');

    colorInputs.forEach(colorInput => {
      const textInput = colorInput.nextElementSibling;

      colorInput.addEventListener('input', () => {
        textInput.value = colorInput.value.toUpperCase();
      });

      textInput.addEventListener('input', () => {
        if (/^#[0-9A-F]{6}$/i.test(textInput.value)) {
          colorInput.value = textInput.value;
        }
      });
    });
  });
</script>
