---
import Button from '@/shared/ui/base/button.astro';
---

<div class='output-panel'>
  <div class='panel-header'>
    <h2>Generated Code</h2>
    <div class='header-stats'>
      <span
        id='output-stats'
        class='stats-text'
        >0 chars, 0 lines, 0 bytes</span
      >
    </div>
  </div>

  <div class='panel-content'>
    <!-- Output Tabs -->
    <div class='output-tabs'>
      <button
        class='tab-button active'
        data-tab='html'>
        <span class='tab-icon'>üìÑ</span>
        HTML Code
      </button>
      <button
        class='tab-button'
        data-tab='responsive'>
        <span class='tab-icon'>üì±</span>
        Responsive
      </button>
      <button
        class='tab-button'
        data-tab='examples'>
        <span class='tab-icon'>üí°</span>
        Examples
      </button>
    </div>

    <!-- HTML Tab -->
    <div
      class='tab-content active'
      id='html-tab'>
      <div class='code-container'>
        <div class='code-header'>
          <span class='code-title'>Basic Iframe</span>
          <div class='code-actions'>
            <Button
              variant='copy'
              size='sm'
              id='copy-html'>
              üìã Copy HTML
            </Button>
          </div>
        </div>
        <div class='code-wrapper'>
          <textarea
            id='html-output'
            class='code-output'
            readonly
            placeholder='Configure the iframe to generate HTML code...'
          ></textarea>
        </div>
      </div>
    </div>

    <!-- Responsive Tab -->
    <div
      class='tab-content'
      id='responsive-tab'>
      <div class='code-container'>
        <div class='code-header'>
          <span class='code-title'>Responsive Iframe with CSS</span>
          <div class='code-actions'>
            <Button
              variant='copy'
              size='sm'
              id='copy-responsive'>
              üì± Copy Responsive
            </Button>
          </div>
        </div>
        <div class='code-wrapper'>
          <textarea
            id='responsive-output'
            class='code-output'
            readonly
            placeholder='Responsive wrapper with CSS will appear here...'
          ></textarea>
        </div>
      </div>

      <div class='responsive-info'>
        <h4>Responsive Features:</h4>
        <ul>
          <li>16:9 aspect ratio maintained</li>
          <li>Scales with container width</li>
          <li>No scrollbars on mobile</li>
          <li>CSS-only solution</li>
        </ul>
      </div>
    </div>

    <!-- Examples Tab -->
    <div
      class='tab-content'
      id='examples-tab'>
      <div class='examples-grid'>
        <div class='example-card'>
          <h4>YouTube Video</h4>
          <div class='example-code'>
            <code
              >&lt;iframe src="https://www.youtube.com/embed/VIDEO_ID" width="560" height="315"
              title="YouTube video player" allowfullscreen allow="accelerometer; autoplay;
              clipboard-write; encrypted-media; gyroscope; picture-in-picture"&gt;&lt;/iframe&gt;</code
            >
          </div>
        </div>

        <div class='example-card'>
          <h4>Google Maps</h4>
          <div class='example-code'>
            <code
              >&lt;iframe src="https://www.google.com/maps/embed?pb=..." width="600" height="450"
              title="Google Maps" loading="lazy"
              referrerpolicy="no-referrer-when-downgrade"&gt;&lt;/iframe&gt;</code
            >
          </div>
        </div>

        <div class='example-card'>
          <h4>CodePen Demo</h4>
          <div class='example-code'>
            <code
              >&lt;iframe src="https://codepen.io/user/embed/pen-id" width="100%" height="300"
              title="CodePen Embed" scrolling="no" sandbox="allow-scripts
              allow-same-origin"&gt;&lt;/iframe&gt;</code
            >
          </div>
        </div>

        <div class='example-card'>
          <h4>Secure Website Embed</h4>
          <div class='example-code'>
            <code
              >&lt;iframe src="https://example.com" width="100%" height="600" title="Website"
              loading="lazy" sandbox="allow-scripts allow-same-origin
              allow-forms"&gt;&lt;/iframe&gt;</code
            >
          </div>
        </div>
      </div>

      <div class='security-tips'>
        <h4>üîí Security Best Practices:</h4>
        <ul>
          <li><strong>Always use sandbox:</strong> Restrict iframe capabilities for security</li>
          <li><strong>Set referrer policy:</strong> Control what information is shared</li>
          <li><strong>Use HTTPS:</strong> Ensure secure connections</li>
          <li><strong>Validate URLs:</strong> Only embed trusted content</li>
          <li><strong>Set appropriate permissions:</strong> Only allow necessary features</li>
        </ul>
      </div>
    </div>

    <!-- Quick Actions -->
    <div class='quick-actions'>
      <div class='action-group'>
        <Button
          variant='outline'
          size='sm'
          id='download-html'>
          üíæ Download HTML
        </Button>
        <Button
          variant='outline'
          size='sm'
          id='open-preview'>
          üëÅÔ∏è Open Preview
        </Button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Tab switching
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');

    tabButtons.forEach(button => {
      button.addEventListener('click', () => {
        const tabId = button.dataset.tab;

        // Update active states
        tabButtons.forEach(btn => btn.classList.remove('active'));
        tabContents.forEach(content => content.classList.remove('active'));

        button.classList.add('active');
        document.getElementById(`${tabId}-tab`).classList.add('active');
      });
    });

    // Update responsive output when HTML changes
    const htmlOutput = document.getElementById('html-output');
    const responsiveOutput = document.getElementById('responsive-output');

    if (htmlOutput && responsiveOutput) {
      const observer = new MutationObserver(() => {
        updateResponsiveOutput();
      });

      observer.observe(htmlOutput, {
        attributes: true,
        childList: true,
        subtree: true,
      });

      // Also listen for value changes
      htmlOutput.addEventListener('input', updateResponsiveOutput);
    }

    function updateResponsiveOutput() {
      const htmlCode = htmlOutput.value;
      if (htmlCode.trim()) {
        const responsiveCode = `<div class="iframe-container">
  ${htmlCode}
</div>

<style>
.iframe-container {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 56.25%; /* 16:9 aspect ratio */
  overflow: hidden;
}

.iframe-container iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
}
</style>`;
        responsiveOutput.value = responsiveCode;
      } else {
        responsiveOutput.value = '';
      }
    }

    // Download HTML functionality
    document.getElementById('download-html')?.addEventListener('click', () => {
      const htmlCode = htmlOutput.value;
      if (!htmlCode.trim()) {
        alert('No HTML code to download');
        return;
      }

      const fullHtml = `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generated Iframe</title>
    <style>
        body {
            font-family: system-ui, sans-serif;
            margin: 2rem;
            background: #f5f5f5;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Generated Iframe</h1>
        ${htmlCode}
    </div>
</body>
</html>`;

      const blob = new Blob([fullHtml], { type: 'text/html' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = 'iframe-embed.html';
      a.click();
      URL.revokeObjectURL(url);
    });

    // Open preview functionality
    document.getElementById('open-preview')?.addEventListener('click', () => {
      const htmlCode = htmlOutput.value;
      if (!htmlCode.trim()) {
        alert('No HTML code to preview');
        return;
      }

      const previewHtml = `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Iframe Preview</title>
    <style>
        body {
            font-family: system-ui, sans-serif;
            margin: 0;
            padding: 2rem;
            background: #f5f5f5;
        }
        .preview-container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            margin-top: 0;
            color: #333;
        }
    </style>
</head>
<body>
    <div class="preview-container">
        <h1>Iframe Preview</h1>
        ${htmlCode}
    </div>
</body>
</html>`;

      const blob = new Blob([previewHtml], { type: 'text/html' });
      const url = URL.createObjectURL(blob);
      window.open(url, '_blank');

      // Clean up the URL after a delay
      setTimeout(() => URL.revokeObjectURL(url), 1000);
    });

    // Initialize responsive output
    updateResponsiveOutput();
  });
</script>

<style>
  .output-panel {
    background: hsl(var(--background));
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  .panel-header {
    padding: 1rem 1.5rem;
    border-bottom: 1px solid hsl(var(--border));
    background: hsl(var(--muted));
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .panel-header h2 {
    margin: 0;
    font-size: 1.125rem;
    font-weight: 600;
    color: hsl(var(--foreground));
  }

  .stats-text {
    font-size: 0.8125rem;
    color: hsl(var(--muted-foreground));
    font-weight: 500;
  }

  .panel-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .output-tabs {
    display: flex;
    border-bottom: 1px solid hsl(var(--border));
    background: hsl(var(--muted) / 0.5);
  }

  .tab-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    border: none;
    background: transparent;
    color: hsl(var(--muted-foreground));
    font-size: 0.8125rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    border-bottom: 2px solid transparent;
  }

  .tab-button:hover {
    background: hsl(var(--muted));
    color: hsl(var(--foreground));
  }

  .tab-button.active {
    background: hsl(var(--background));
    color: hsl(var(--primary));
    border-bottom-color: hsl(var(--primary));
  }

  .tab-icon {
    font-size: 1rem;
  }

  .tab-content {
    display: none;
    flex: 1;
    flex-direction: column;
    padding: 1.5rem;
  }

  .tab-content.active {
    display: flex;
  }

  .code-container {
    flex: 1;
    display: flex;
    flex-direction: column;
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    overflow: hidden;
  }

  .code-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.75rem 1rem;
    background: hsl(var(--muted));
    border-bottom: 1px solid hsl(var(--border));
  }

  .code-title {
    font-size: 0.8125rem;
    font-weight: 500;
    color: hsl(var(--foreground));
  }

  .code-actions {
    display: flex;
    gap: 0.5rem;
  }

  .code-wrapper {
    flex: 1;
    position: relative;
  }

  .code-output {
    width: 100%;
    height: 100%;
    min-height: 250px;
    padding: 1rem;
    border: none;
    outline: none;
    resize: vertical;
    background: hsl(var(--background));
    color: hsl(var(--foreground));
    font-family: var(--font-mono);
    font-size: 0.8125rem;
    line-height: 1.5;
  }

  .code-output:focus {
    background: hsl(var(--muted) / 0.3);
  }

  .responsive-info {
    margin-top: 1rem;
    padding: 1rem;
    background: hsl(var(--muted) / 0.5);
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
  }

  .responsive-info h4 {
    margin: 0 0 0.75rem 0;
    font-size: 0.875rem;
    color: hsl(var(--foreground));
  }

  .responsive-info ul {
    margin: 0;
    padding-left: 1.5rem;
    list-style-type: disc;
  }

  .responsive-info li {
    font-size: 0.8125rem;
    color: hsl(var(--muted-foreground));
    margin-bottom: 0.25rem;
  }

  .examples-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .example-card {
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    padding: 1rem;
    background: hsl(var(--muted) / 0.3);
  }

  .example-card h4 {
    margin: 0 0 0.75rem 0;
    font-size: 0.875rem;
    color: hsl(var(--foreground));
  }

  .example-code {
    background: hsl(var(--muted));
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    padding: 0.75rem;
    overflow-x: auto;
  }

  .example-code code {
    font-family: var(--font-mono);
    font-size: 0.75rem;
    line-height: 1.4;
    color: hsl(var(--foreground));
    white-space: pre-wrap;
    word-break: break-all;
  }

  .security-tips {
    padding: 1rem;
    background: hsl(var(--muted) / 0.5);
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    border-left: 4px solid hsl(var(--primary));
  }

  .security-tips h4 {
    margin: 0 0 0.75rem 0;
    font-size: 0.875rem;
    color: hsl(var(--foreground));
  }

  .security-tips ul {
    margin: 0;
    padding-left: 1.5rem;
    list-style-type: disc;
  }

  .security-tips li {
    font-size: 0.8125rem;
    color: hsl(var(--muted-foreground));
    margin-bottom: 0.5rem;
    line-height: 1.4;
  }

  .security-tips strong {
    color: hsl(var(--foreground));
  }

  .quick-actions {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid hsl(var(--border));
  }

  .action-group {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  @media (max-width: 768px) {
    .panel-content {
      padding: 0;
    }

    .tab-content {
      padding: 1rem;
    }

    .examples-grid {
      grid-template-columns: 1fr;
    }

    .code-header {
      flex-direction: column;
      align-items: stretch;
      gap: 0.75rem;
    }

    .code-actions {
      justify-content: center;
    }

    .action-group {
      justify-content: center;
    }
  }
</style>
