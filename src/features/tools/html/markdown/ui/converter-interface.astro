---
import Button from '@/shared/ui/base/button.astro';
---

<!-- src/features/tools/html/markdown/ui/converter-interface.astro -->
<div class='converter-container'>
  <!-- Header with controls -->
  <div class='converter-header'>
    <div class='header-left'>
      <div class='direction-toggle'>
        <button
          type='button'
          id='directionToggle'
          class='toggle-btn'
          title='Switch conversion direction'>
          <span class='direction-text'>HTML ‚Üí Markdown</span>
          <svg
            width='16'
            height='16'
            viewBox='0 0 24 24'
            fill='none'
            stroke='currentColor'
            stroke-width='2'>
            <polyline points='17,1 21,5 17,9'></polyline>
            <path d='M3 11V7A4 4 0 0 1 7 3H21'></path>
            <polyline points='7,23 3,19 7,15'></polyline>
            <path d='M21 13V17A4 4 0 0 1 17 21H3'></path>
          </svg>
        </button>
      </div>

      <div class='options-group'>
        <div class='checkbox-group'>
          <input
            type='checkbox'
            id='preserveWhitespace'
            checked
          />
          <label for='preserveWhitespace'>Preserve Whitespace</label>
        </div>
        <div class='checkbox-group'>
          <input
            type='checkbox'
            id='gfmMode'
            checked
          />
          <label for='gfmMode'>GitHub Flavored Markdown</label>
        </div>
      </div>
    </div>

    <div class='header-right'>
      <div class='file-actions'>
        <input
          type='file'
          id='fileInput'
          accept='.html,.htm,.md,.markdown,.txt'
          style='display: none;'
        />
        <Button
          variant='outline'
          size='sm'
          id='importBtn'>
          <svg
            width='16'
            height='16'
            viewBox='0 0 24 24'
            fill='none'
            stroke='currentColor'
            stroke-width='2'>
            <path d='M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4'></path>
            <polyline points='17,8 12,3 7,8'></polyline>
            <line
              x1='12'
              y1='3'
              x2='12'
              y2='15'
            ></line>
          </svg>
          Import
        </Button>

        <Button
          variant='secondary'
          size='sm'
          id='exportBtn'>
          <svg
            width='16'
            height='16'
            viewBox='0 0 24 24'
            fill='none'
            stroke='currentColor'
            stroke-width='2'>
            <path d='M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4'></path>
            <polyline points='7,10 12,15 17,10'></polyline>
            <line
              x1='12'
              y1='15'
              x2='12'
              y2='3'
            ></line>
          </svg>
          Export
        </Button>
      </div>

      <div class='action-buttons'>
        <Button
          variant='convert'
          size='sm'
          id='convertBtn'
          >Convert</Button
        >
        <Button
          variant='clear'
          size='sm'
          id='clearBtn'
          >Clear</Button
        >
        <Button
          variant='copy'
          size='sm'
          id='copyBtn'
          >Copy</Button
        >
      </div>
    </div>
  </div>

  <!-- Messages -->
  <div
    id='errorMessage'
    class='message error-message hidden'
  ></div>
  <div
    id='successMessage'
    class='message success-message hidden'
  ></div>

  <!-- Main content area -->
  <div class='main-content'>
    <!-- Input Panel -->
    <div class='converter-panel input'>
      <div class='pane-header'>
        <div class='pane-title'>
          <span class='title-icon'>üìù</span>
          <span id='inputTitle'>HTML Input</span>
        </div>
        <Button
          variant='sample'
          size='sm'
          id='sampleBtn'
          >Sample</Button
        >
      </div>

      <textarea
        class='textarea'
        id='inputTextarea'
        placeholder='Paste your HTML code here or import a file...'
        spellcheck='false'
      ></textarea>

      <div
        class='stats'
        id='inputStats'>
        Lines: 0, Characters: 0, Words: 0
      </div>
    </div>

    <!-- Output Panel -->
    <div class='converter-panel output'>
      <div class='pane-header'>
        <div class='pane-title'>
          <span class='title-icon'>üìÑ</span>
          <span id='outputTitle'>Markdown Output</span>
        </div>
      </div>

      <textarea
        class='textarea output readonly'
        id='outputTextarea'
        placeholder='Converted content will appear here...'
        readonly
        spellcheck='false'
      ></textarea>

      <div
        class='stats'
        id='outputStats'>
        Lines: 0, Characters: 0, Words: 0
      </div>
    </div>
  </div>

  <!-- Preview Panel (for Markdown to HTML) -->
  <div
    class='preview-panel hidden'
    id='previewPanel'>
    <div class='pane-header'>
      <div class='pane-title'>
        <span class='title-icon'>üëÅÔ∏è</span>
        <span>Live Preview</span>
      </div>
    </div>
    <div
      class='preview-content'
      id='previewContent'
    ></div>
  </div>
</div>

<style>
  .converter-container {
    background: white;
    border: 1px solid #e2e8f0;
    border-radius: var(--radius);
    overflow: hidden;
    margin-top: 2.5rem;
  }

  .converter-header {
    background: white;
    border-bottom: 1px solid #e2e8f0;
    padding: 1rem 1.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .header-left {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    flex-wrap: wrap;
  }

  .header-right {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .direction-toggle {
    position: relative;
  }

  .toggle-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    background: #f8fafc;
    border: 1px solid #e2e8f0;
    border-radius: var(--radius);
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .toggle-btn:hover {
    background: #e2e8f0;
  }

  .options-group {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .checkbox-group {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .checkbox-group input[type='checkbox'] {
    width: 1rem;
    height: 1rem;
    accent-color: #3b82f6;
  }

  .checkbox-group label {
    font-size: 0.875rem;
    color: #374151;
    cursor: pointer;
  }

  .file-actions {
    display: flex;
    gap: 0.5rem;
  }

  .action-buttons {
    display: flex;
    gap: 0.5rem;
  }

  .message {
    margin: 0 1.5rem;
    padding: 0.75rem 1.5rem;
    font-size: 0.875rem;
    border-radius: var(--radius);
  }

  .error-message {
    background: #fef2f2;
    border: 1px solid #fecaca;
    color: #dc2626;
  }

  .success-message {
    background: #f0fdf4;
    border: 1px solid #bbf7d0;
    color: #166534;
  }

  .hidden {
    display: none !important;
  }

  .main-content {
    display: flex;
    height: 600px;
  }

  .converter-panel {
    background: white;
    display: flex;
    flex-direction: column;
    flex: 1;
  }

  .converter-panel.input {
    border-right: 1px solid #e2e8f0;
  }

  .pane-header {
    padding: 1rem 1.5rem;
    border-bottom: 1px solid #e2e8f0;
    background: #f8fafc;
    font-weight: 600;
    color: #1e293b;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .pane-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .title-icon {
    font-size: 1rem;
  }

  .textarea {
    font-family: var(--font-mono);
    font-size: 14px;
    line-height: 1.6;
    color: #333;
    padding: 1rem;
    border: none;
    outline: none;
    resize: none;
    width: 100%;
    height: 100%;
    background: white;
    overflow: auto;
  }

  .textarea:focus {
    box-shadow: inset 0 0 0 2px rgba(59, 130, 246, 0.5);
  }

  .textarea.output {
    background: #f8fafc;
    color: #1e293b;
  }

  .textarea.readonly {
    cursor: default;
  }

  .stats {
    padding: 0.5rem 1.5rem;
    background: #f8fafc;
    border-top: 1px solid #e2e8f0;
    font-size: 0.75rem;
    color: #64748b;
  }

  .preview-panel {
    border-top: 1px solid #e2e8f0;
    background: white;
    max-height: 300px;
    overflow-y: auto;
  }

  .preview-content {
    padding: 1.5rem;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    line-height: 1.6;
  }

  .preview-content h1,
  .preview-content h2,
  .preview-content h3 {
    margin: 1rem 0 0.5rem 0;
  }

  .preview-content p {
    margin: 0.5rem 0;
  }

  .preview-content code {
    background: #f1f5f9;
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-family: var(--font-mono);
    font-size: 0.875em;
  }

  .preview-content pre {
    background: #1e293b;
    color: #f1f5f9;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1rem 0;
  }

  .preview-content blockquote {
    border-left: 4px solid #3b82f6;
    background: #f8fafc;
    margin: 1rem 0;
    padding: 1rem;
    border-radius: 0.25rem;
  }

  .preview-content ul,
  .preview-content ol {
    padding-left: 2rem;
  }

  .preview-content table {
    width: 100%;
    border-collapse: collapse;
    margin: 1rem 0;
  }

  .preview-content th,
  .preview-content td {
    border: 1px solid #e2e8f0;
    padding: 0.5rem;
    text-align: left;
  }

  .preview-content th {
    background: #f8fafc;
    font-weight: 600;
  }

  @media (max-width: 768px) {
    .converter-header {
      flex-direction: column;
      gap: 1rem;
      align-items: stretch;
    }

    .header-left,
    .header-right {
      justify-content: center;
    }

    .options-group {
      flex-wrap: wrap;
      justify-content: center;
    }

    .main-content {
      flex-direction: column;
      height: auto;
    }

    .converter-panel {
      width: 100%;
      height: 300px;
    }

    .converter-panel.input {
      border-right: none;
      border-bottom: 1px solid #e2e8f0;
    }
  }
</style>
