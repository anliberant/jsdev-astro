---
import { generateToolsBreadcrumbs } from '@/shared/helpers/breadcrumbs.helpers';
import Breadcrumbs from '@/shared/ui/base/breadcrumbs.astro';
import HeadingBlock from '@/shared/ui/layout/heading-block.astro';

import EditorContent from './ui/editor-content.astro';
import EditorHeader from './ui/editor-header.astro';
import EditorToolbar from './ui/editor-toolbar.astro';

const breadcrumbItems = generateToolsBreadcrumbs('MDX Editor');
---

<Breadcrumbs
  items={breadcrumbItems}
  class='mt-10'
/>

<HeadingBlock
  title='MDX Editor'
  description='Edit and preview Markdown content with live HTML output'
  class='mt-0'
/>

<div class='mdx-editor'>
  <EditorHeader />
  <EditorToolbar />
  <EditorContent />
</div>

<script>
  import { HtmlMarkdownController } from './lib/html-markdown-controller';

  // Method 1: Using the enhanced global system
  if (typeof window !== 'undefined' && window.safeInitializeConverter) {
    window.safeInitializeConverter(
      'HtmlMarkdownConverter',
      ['htmlInput', 'markdownOutput', 'convertBtn', 'clearBtn', 'copyBtn'],
      () => {
        new HtmlMarkdownController();
      }
    );
  }

  // Method 2: Direct initialization with safety checks
  document.addEventListener('DOMContentLoaded', () => {
    // Check if required elements exist before initializing
    const requiredElements = ['htmlInput', 'markdownOutput', 'convertBtn'];
    const elementsExist = requiredElements.every(id => document.getElementById(id));

    if (elementsExist) {
      try {
        new HtmlMarkdownController();
      } catch (error) {
        console.error('Failed to initialize HtmlMarkdownController:', error);
      }
    } else {
      console.log('HtmlMarkdownConverter: Required elements not found, skipping initialization');
    }
  });
</script>

<style>
  .mdx-editor {
    margin-top: 2.5rem;
    border: 1px solid #e2e8f0;
    border-radius: 0.5rem;
    background: white;
    overflow: hidden;
  }
</style>
