---
import { siteConfig } from '@/app/config/site';
import Footer from '@/widgets/footer/footer.astro';
import Header from '@/widgets/header/header.astro';

import '@/shared/styles/global.css';

import ScrollToTop from '@/shared/ui/layout/scroll-to-top.astro';

export interface Props {
  title: string;
  description?: string;
  image?: string;
  type?: string;
}

const {
  title,
  description = siteConfig.description,
  image = siteConfig.image,
  type = 'website',
} = Astro.props;

const fullTitle = title || siteConfig.title;
const fullImageUrl = image.startsWith('http') ? image : `${siteConfig.siteUrl}/${image}`;
---

<!doctype html>
<html
  lang='en'
  data-theme='light'>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='description'
      content={description}
    />
    <meta
      name='viewport'
      content='width=device-width, initial-scale=1.0'
    />
    <link
      rel='preconnect'
      href='https://fonts.googleapis.com'
    />
    <link
      rel='preconnect'
      href='https://fonts.gstatic.com'
      crossorigin
    />
    <link
      rel='icon'
      type='image/png'
      href='/icon.png'
    />
    <meta
      name='generator'
      content={Astro.generator}
    />
    <title>{fullTitle}</title>

    <!-- Umami Analytics -->
    <script
      defer
      src='https://cloud.umami.is/script.js'
      data-website-id='97be30e6-d00d-41c8-9353-a900d0f96dc7'
    ></script>
    <!-- Fonts -->
    <link
      href='https://fonts.googleapis.com/css2?family=PT+Serif:wght@400;700&family=Roboto:wght@300;400;500;700&family=Fira+Code:wght@400;500&display=swap'
      rel='preload'
      as='style'
      onload="this.onload=null;this.rel='stylesheet'"
    />
    <noscript>
      <link
        href='https://fonts.googleapis.com/css2?family=PT+Serif:wght@400;700&family=Roboto:wght@300;400;500;700&family=Fira+Code:wght@400;500&display=swap'
        rel='stylesheet'
      />
    </noscript>
    <link
      rel='alternate'
      type='application/rss+xml'
      title={siteConfig.title}
      href={new URL('rss.xml', Astro.site)}
    />
    <!-- SEO Meta Tags -->
    <meta
      property='og:title'
      content={fullTitle}
    />
    <meta
      property='og:description'
      content={description}
    />
    <meta
      property='og:image'
      content={fullImageUrl}
    />
    <meta
      property='og:url'
      content={Astro.url}
    />
    <meta
      property='og:type'
      content={type}
    />
    <meta
      property='og:site_name'
      content={siteConfig.shortTitle}
    />

    <!-- Twitter Card -->
    <meta
      name='twitter:card'
      content='summary_large_image'
    />
    <meta
      name='twitter:title'
      content={fullTitle}
    />
    <meta
      name='twitter:description'
      content={description}
    />
    <meta
      name='twitter:image'
      content={fullImageUrl}
    />
    {
      siteConfig.twitterUsername && (
        <meta
          name='twitter:site'
          content={siteConfig.twitterUsername}
        />
      )
    }

    <!-- Canonical URL (default, can be overridden) -->
    <link
      rel='canonical'
      href={Astro.url}
    />
    <link
      rel='sitemap'
      href='/sitemap-index.xml'
    />

    <!-- Additional head content slot -->
    <slot name='head' />
  </head>
  <body>
    <div class='container'>
      <Header />
      <slot />
      <Footer />
      <ScrollToTop />
    </div>

    <script>
      // Scroll to top functionality
      class ScrollToTop {
        private button: HTMLButtonElement;
        private showButton = false;

        constructor() {
          this.createButton();
          this.init();
        }

        private createButton() {
          this.button = document.createElement('button');
          this.button.innerHTML = 'â†‘';
          this.button.className = 'scroll-to-top';
          this.button.setAttribute('aria-label', 'Scroll to top');
          this.button.style.display = 'none';
          document.body.appendChild(this.button);
        }

        private init() {
          this.button.addEventListener('click', () => {
            window.scrollTo({ top: 0, behavior: 'smooth' });
          });

          window.addEventListener('scroll', () => this.handleScroll());
        }

        private handleScroll() {
          const shouldShow = window.pageYOffset > 1200;
          if (shouldShow !== this.showButton) {
            this.showButton = shouldShow;
            this.button.style.display = shouldShow ? 'block' : 'none';
          }
        }
      }

      new ScrollToTop();
    </script>
  </body>
</html>

<style>
  html {
    font-family: 'Roboto', system-ui, sans-serif;
    font-display: swap;
  }
  body {
    margin: 0;
    padding: 0;
    line-height: 1.6;
    font-size: 16px;
    background: #fff;
    color: #000;
  }
  .header {
    height: 4rem;
    border-bottom: 1px solid #e5e7eb;
  }
  .container {
    margin: 0 auto;
    padding: 0 2rem;
  }
  .main {
    padding: 0 0.5rem;
    font-size: 1.2rem;
  }

  .scroll-to-top {
    position: fixed;
    bottom: var(--space-xl);
    right: var(--space-xl);
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    background: var(--color-primary);
    color: white;
    border: none;
    font-size: 1.2rem;
    cursor: pointer;
    z-index: 1000;

    transform: translateY(100px);
    opacity: 0;
    visibility: hidden;

    transition:
      transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
      opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);

    will-change: transform, opacity;

    box-shadow: var(--shadow-lg);
  }

  .scroll-to-top.visible {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }

  .scroll-to-top:hover {
    transform: translateY(-2px) scale(1.05);
  }
</style>
